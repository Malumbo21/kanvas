plugins {
    id 'java-library'
    id 'org.jetbrains.kotlin.jvm'
    id 'maven'
    id 'signing'
}

group 'com.athaydes.kanvas'
version '1.0.1'
description 'A Kotlin DSL for JavaFX Canvas'

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    testCompile group: 'junit', name: 'junit', version: '4.12'
}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

task sourcesJar(type: Jar, dependsOn: classes) {
    from sourceSets.main.allSource
    classifier "sources"
    extension "jar"
}

task javadocJar(type: Jar) {
    classifier "javadoc"
    from javadoc
}

jar {
    manifest {
        attributes 'Implementation-Version': version,
                'Implementation-Name': 'Kanvas Core',
                'Implementation-Vendor': 'Renato Athaydes',
                'Automatic-Module-Name': 'kanvas.core'
    }
}

/* Publishing config */

artifacts {
    archives javadocJar, sourcesJar
}

signing {
    sign configurations.archives
}

def getProjectProperty = { String propertyName ->
    project.properties[propertyName]
}

uploadArchives {
    repositories {
        mavenDeployer {
            beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

            repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
                authentication(
                        userName: getProjectProperty("ossrhUsername"),
                        password: getProjectProperty("ossrhPassword"))
            }

            snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
                authentication(
                        userName: getProjectProperty("ossrhUsername"),
                        password: getProjectProperty("ossrhPassword"))
            }

            pom.project {
                inceptionYear '2020'
                name project.name
                packaging 'jar'
                description project.description

                url 'https://github.com/renatoathaydes/kanvas'

                scm {
                    connection 'git@github.com:renatoathaydes/kanvas.git'
                    developerConnection 'git@github.com:renatoathaydes/kanvas.git'
                    url 'https://github.com/renatoathaydes/kanvas'
                }

                licenses {
                    license {
                        name 'The Apache License, Version 2.0'
                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }

                developers {
                    developer {
                        id 'renatoathaydes'
                        name 'Renato Athaydes'
                        email 'renato@athaydes.com'
                    }
                }
            }
        }
    }
}
